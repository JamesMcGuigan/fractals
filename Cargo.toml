# See more keys and their definitions at https://doc.rust-lang.org/cargo/reference/manifest.html

[package]
name = "fractals"
version = "0.1.0"
edition = "2018"



#[lib]
#crate-type = ["rlib", "cdylib"]   # Only required for wasm-pack

[[bin]]
name = "julia_image"
path = "src/bin/julia_image.rs"



### trunk build filesizes at different optimization levels
# 1552814 bytes = ./dist/fractals-f87f83b5aa0b0d10_bg.wasm | trunk build (opt-level = 0)
#  487352 bytes = ./dist/fractals-7e2903108cca7e76_bg.wasm | trunk build (opt-level = 1 + dev.package = 3)
#  346945 bytes = ./dist/fractals-e94ca023ff5cb0ab_bg.wasm | trunk build --release (opt-level = s)
#  337710 bytes = ./dist/fractals-df2dbbc53432b30e_bg.wasm | trunk build --release (opt-level = 1)
#  308156 bytes = ./dist/fractals-df2dbbc53432b30e_bg.wasm | trunk build --release (opt-level = 3)
#  294612 bytes = ./dist/fractals-df2dbbc53432b30e_bg.wasm | trunk build --release (opt-level = 2)
#  276139 bytes = ./dist/fractals-bc68a3ce0e42c56b_bg.wasm | trunk build --release (opt-level = z)

# DOCS: https://yew.rs/docs/advanced-topics/optimizations
# DOCS: https://docs.rust-embedded.org/book/unsorted/speed-vs-size.html
# DOCS: https://doc.rust-lang.org/cargo/reference/profiles.html#lto
# DOCS: https://doc.rust-lang.org/rustc/codegen-options/index.html#codegen-units
[profile.release]
panic = "abort"     # less code to include into binary
lto   = "fat"       # link time optimization using using whole-program analysis
codegen-units = 1   # singlethreaded optimization over all codebase ( better optimization, slower build )
opt-level     = 3   # optimization for speed
#opt-level   = 'z'  # optimization for size ( more aggressive ) - prevents inlining
#opt-level   = 's'  # optimization for size - prevents inlining

## DOCS: https://www.reddit.com/r/rust/comments/gvrgca/this_is_a_neat_trick_for_getting_good_runtime/
[profile.dev.package."*"]
opt-level = 3  # Optimize dependencies in Development mode - they don't change often

[profile.dev]
opt-level = 1  # Turn on a small amount of optimisation in Development mode.


# cargo udep  # remove unused dependencies
[dependencies]
anyhow = "1.0.58"
# bytemuck = "1.10.0"
# cfg-match = "0.2.1"
contracts = "0.6.3"
colors-transform = "0.2.11"
gloo-console = "0.2.1"
gloo-events = "0.1"
image = "0.24.2"
num-complex = "0.4"
# stdweb = "0.4.20"
structopt = "0.3.26"
# stylist = "0.9"
wasm-bindgen = "0.2.81"
wee_alloc = "0.4.5"
yew = { git = "https://github.com/yewstack/yew/", features = ["csr"] }
# yew_styles = { version="0.11", features = ["navbar"]}

[dependencies.web-sys]
version = "0.3.58"
features = [
    "CanvasRenderingContext2d",
    "Document",
    "Element",
    "HtmlCanvasElement",
    "ImageData",
    "Performance",
    "Window",
]

# cargo install --git https://github.com/rust-lang/measureme --branch stable crox
# cargo install --git https://github.com/rust-lang/measureme --branch stable summarize
[dev-dependencies]
cargo-bloat = "0.11.1"
cargo-expand = "1.0.27"
cargo-generate = "0.15.2"
cargo-llvm-lines = "0.4.16"
cargo-udeps = "0.1.30"
cargo-web = "0.6.26"
flamegraph = "0.6.1"
grass = "0.11.0"
wasm-bindgen-cli = "0.2.81"
